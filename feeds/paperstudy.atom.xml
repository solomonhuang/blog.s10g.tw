<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Solomon's Notebook - paperstudy</title><link href="https://blog.s10g.tw/" rel="alternate"></link><link href="https://blog.s10g.tw/feeds/paperstudy.atom.xml" rel="self"></link><id>https://blog.s10g.tw/</id><updated>2017-06-28T17:57:34+08:00</updated><entry><title>[Paper Study] Mant-to-one, many-to-many protocol</title><link href="https://blog.s10g.tw/posts/2017/06/28/paper-study-many-to-one/" rel="alternate"></link><published>2017-06-28T17:57:34+08:00</published><updated>2017-06-28T17:57:34+08:00</updated><author><name>Solomon Huang</name></author><id>tag:blog.s10g.tw,2017-06-28:/posts/2017/06/28/paper-study-many-to-one/</id><summary type="html">&lt;p&gt;這一篇 INFOCOM 2017 的論文提出的 protocol 是為了改善低功耗產品 (如：ZigBee) 中，同時要把 data 回傳給同一個 node 的情況下，減少碰撞，減少 radio-on time。另 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;這一篇 INFOCOM 2017 的論文提出的 protocol 是為了改善低功耗產品 (如：ZigBee) 中，同時要把 data 回傳給同一個 node 的情況下，減少碰撞，減少 radio-on time。另外就是多個 node 要把自己的資料傳遞給其他 node，同時也是要減少碰撞與 radio-on time。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;論文題目：Design and Application of a Many-to-One Communication Protocol&lt;/li&gt;
&lt;li&gt;作者：Sudipta Saha, Mun Choon Chan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接看圖講重點&lt;/p&gt;
&lt;h1&gt;Many-to-one: SyncMerge&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;架構圖&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Many to one" src="/images/2017-06-28-many-to-one.png" title="many to one"&gt;&lt;/p&gt;
&lt;p&gt;圖中的 (b) 就是 source nodes 要回應資料給 initiator。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;四個 source nodes 要傳送回應資料&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Many to one" src="/images/2017-06-28-many-to-one-reps.png"&gt;&lt;/p&gt;
&lt;p&gt;這邊有幾個前提：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每個 source nodes 的 header 是一樣的。&lt;/li&gt;
&lt;li&gt;initiator 發出的 INIT 封包中已經讓全部的 source nodes 知道自己的傳送順序。&lt;/li&gt;
&lt;li&gt;時間同步靠 INIT 封包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以每個 source nodes 同時發射 header segment，這樣可以確保訊號被正增強，收到的內容是對的。然後每個 source nodes 在自己的傳送時間把 txpower 調到最大，不是自己的時間就把 txpower 關掉或是調到最小，進而達到不會相互碰撞的結果。&lt;/p&gt;
&lt;h1&gt;Many-to-many: ByteCast&lt;/h1&gt;
&lt;p&gt;Many-to-many 利用了 many-to-one 的方式改善。直接看底下的圖。&lt;/p&gt;
&lt;p&gt;圖中的 (a) 指出這是一個雙層四 nodes 的架構，(b) 是作者的 ByteCast，(c) 是另一篇論文提出的 Chaos 方法。&lt;/p&gt;
&lt;p&gt;ByteCast 在兩層的架構只要三步就讓每個 node 都拿到全部的資料了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Layer 1 的 node 1 TX，node 2-4 收到 data 1&lt;/li&gt;
&lt;li&gt;Layer 2 的 node 2-4 分別在各自的時間點 TX，node 1 收到 data 2-4。此時 node 1 有了 data 1-4。&lt;/li&gt;
&lt;li&gt;Node 1 TX，node 2-4 都拿到自己所欠缺的 data。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;雙層架構模擬圖&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Mant to many" src="/images/2017-06-25-many-to-many.png"&gt;&lt;/p&gt;</content><category term="paperstudy"></category><category term="infocom"></category><category term="wireless"></category><category term="protocol"></category></entry><entry><title>[Paper Study] ACT-AP</title><link href="https://blog.s10g.tw/posts/2017/06/28/paper-study-ACT-AP/" rel="alternate"></link><published>2017-06-28T16:59:29+08:00</published><updated>2017-06-28T16:59:29+08:00</updated><author><name>Solomon Huang</name></author><id>tag:blog.s10g.tw,2017-06-28:/posts/2017/06/28/paper-study-ACT-AP/</id><summary type="html">&lt;p&gt;這篇 INFOCOM 2017 的論文主要目的是只修改 AP 的軟體而不修改 client 端的運作前提下，讓 multicast 封包的送達率提高。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;論文題目：ACT-AP: ACTivator Access Point for …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;這篇 INFOCOM 2017 的論文主要目的是只修改 AP 的軟體而不修改 client 端的運作前提下，讓 multicast 封包的送達率提高。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;論文題目：ACT-AP: ACTivator Access Point for Multicast over WLAN&lt;/li&gt;
&lt;li&gt;作者：Gyujin Lee, Yeonchul Shin, Jonghoe Koo, Junyoung Choi, and Sunghyun Choi&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;問題簡述&lt;/h1&gt;
&lt;p&gt;大多數的 WiFi client 為了省電會進到 power saving mode(PSM)，在 PSM 情況下 client 往往會收不到 AP 發射出來的 multicast 封包。作者設計了 ACT-AP 讓 client 不會因為 PWM 而沒收到 multicast 封包。&lt;/p&gt;
&lt;h1&gt;主要問題&lt;/h1&gt;
&lt;p&gt;一般市售 WiFi client 有三種情況會造成 PDR (packet deliver rate) 下降。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ReceiveDTIMs off&lt;ul&gt;
&lt;li&gt;收到 DTIM 但是沒有反應&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Early sleep&lt;ul&gt;
&lt;li&gt;太早睡覺了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Inappropriate wakeup&lt;ul&gt;
&lt;li&gt;因為送了 NULL-DATA(PM bit 0) 之後沒多久，就又送了 NULL-DATA(PM bit 1)，進入 PSM。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="undesired functions" src="/images/2017-06-28-ACT-AP-undesired-functions.png" title="undesired functions"&gt;&lt;/p&gt;
&lt;h1&gt;解決方案&lt;/h1&gt;
&lt;p&gt;在 AP 端發 ACT-packet(1 byte 的 data)，讓 client 端保持清醒。&lt;/p&gt;
&lt;p&gt;&lt;img alt="ACT-AP desgin" src="/images/2017-06-28-ACT-AP-design.png" title="ACT-AP desgin"&gt;&lt;/p&gt;
&lt;p&gt;圖中的重點是 &lt;code&gt;ACT-packet Interval Controller&lt;/code&gt;。作者的演算法會去逼近 client 的 tail time(沒收到封包進入PWM的時間)，在 tail time 結束前對 client 發 ACT-packet，所以 client 就可以醒著接收 multicast 封包了。&lt;/p&gt;</content><category term="paperstudy"></category><category term="infocom"></category><category term="wireless"></category><category term="wifi"></category><category term="multicast"></category></entry></feed>